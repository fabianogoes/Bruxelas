var appbruxelas=angular.module("appbruxelas",["ngRoute","ui.bootstrap"]);appbruxelas.config(["$routeProvider","$httpProvider",function(a,b){a.when("/",{templateUrl:"home.html"}).when("/profile",{templateUrl:"talker/form-talker.html"}).when("/page",{templateUrl:"talker/talker-page.html"})}]),appbruxelas.config(["$locationProvider",function(a){a.hashPrefix("")}]),appbruxelas.factory("ConnectionService",["$http",function(a){var b=function(b){return a.get("http/connections-by-user.json")};return{findByUser:b}}]),appbruxelas.factory("SessionService",["$http",function(a){var b=function(){return a.get("/bruxelas/api/user/getsession")};return{getSession:b}}]),appbruxelas.factory("TalkerService",["$http",function(a){var b=function(){return a.get("/bruxelas/api/talker/countries")},c=function(){return a.get("/bruxelas/api/talker/languages")},d=function(b){return a.get("/bruxelas/api/talker/languagesyouspeak/"+b)},e=function(b){return a.post("/bruxelas/api/talker/languagelearn",b)},f=function(b){return a.post("/bruxelas/api/talker/languagelearn/delete/"+b.id)},g=function(b){return a.post("/bruxelas/api/talker",b)},h=function(b){return a.get("/bruxelas/api/talker/findbyuser/"+b.id)};return{findCountries:b,findLanguages:c,findLanguagesYouSpeakByTalkerId:d,addLanguageSpeak:e,save:g,removeLanguageSpeak:f,findByUser:h}}]),appbruxelas.factory("VersionService",["$http",function(a){var b=function(b){return a.get("/bruxelas/api/version")};return{findActualVersion:b}}]),appbruxelas.controller("HomeController",["ConnectionService","VersionService",function(a,b){var c=this;c.init=function(){c.findConnectionsByUser(1),c.findActualVersion()},c.findConnectionsByUser=function(b){a.findByUser(b).then(function(a){c.connections=a.data},function(a){console.log(a)})},c.findActualVersion=function(){b.findActualVersion().then(function(a){c.version=a.data,console.log(c.version)},function(a){console.log(a)})},c.init()}]),appbruxelas.controller("SessionController",["$scope","SessionService",function(a,b){var c=this;c.init=function(){b.getSession().then(function(b){console.log(b),c.userLogged=b.data,a.userLogged=c.userLogged,c.userLogged&&"null"!=c.userLogged||(window.location.href="/bruxelas/user/login")},function(a){alert(a.data)})},c.init()}]),appbruxelas.controller("TalkerCRUDController",["SessionService","TalkerService","$filter","$scope",function(a,b,c,d){var e=this;e.openedBirthDate=!1,e.dateOptions={formatYear:"yy",maxDate:new Date(2e3,1,1),minDate:new Date(1920,1,1),startingDay:1},e.open=function(){e.openedBirthDate=!e.openedBirthDate,console.log(e.openedBirthDate)},e.init=function(){e.findCountiresBorn(),e.findCountriesLiving(),e.findLanguages(),a.getSession().then(function(a){e.findTalkerByUser(a.data)},function(a){alert(a.data)})},e.findTalkerByUser=function(a){b.findByUser(a).then(function(a){e.talker=a.data,e.talker.birthDate=Date.parse(e.talker.birthDate),e.findLanguagesYouSpeak(e.talker)},function(a){alert(a.data)})},e.findCountiresBorn=function(){b.findCountries().then(function(a){e.countriesBorn=a.data,console.log(e.countriesBorn)},function(a){console.log(a)})},e.findCountriesLiving=function(){b.findCountries().then(function(a){e.countriesLiving=a.data},function(a){console.log(a)})},e.findLanguages=function(){b.findLanguages().then(function(a){e.languages=a.data},function(a){console.log(a)})},e.findLanguagesYouSpeak=function(a){b.findLanguagesYouSpeakByTalkerId(a.id).then(function(a){e.languagesSpeak=a.data},function(a){console.log(a)})},e.languagesSpeak=[{}],e.saveLanguage=function(a){a.talker={},a.talker.id=e.talker.id,b.addLanguageSpeak(a).then(function(a){e.findLanguagesYouSpeak(e.talker)},function(a){alert(a.data)})},e.addLanguage=function(a){e.languagesSpeak.lenght>=7||e.languagesSpeak.push(new Object)},e.popLanguages=function(a,c){c.id?b.removeLanguageSpeak(c).then(function(a){e.findLanguagesYouSpeak(e.talker)},function(a){console.log(a.data)}):e.languagesSpeak.splice(a,1)},e.save=function(a){a.birthDate=c("date")(a.birthDate,"dd/MM/yyyy"),console.log(JSON.stringify(a)),b.save(a).then(function(a){e.talker=a.data,console.log(e.talker.birthDate),e.talker.birthDate=new Date(e.talker.birthDate),alert("Talker sucessfully saved"),e.addLanguage()},function(a){alert(a.data)})},e.init()}]);